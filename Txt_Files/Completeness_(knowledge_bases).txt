Completeness (knowledge bases) - Wikipedia Completeness (knowledge bases) From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article includes a list of references, but its sources remain unclear because it has insufficient inline citations. Please help to improve this article by introducing more precise citations. (January 2018) (Learn how and when to remove this template message) This article needs attention from an expert in Logic. Please add a reason or a talk parameter to this template to explain the issue with the article. WikiProject Logic may be able to help recruit an expert. (January 2018) This article may be too technical for most readers to understand. Please help improve it to make it understandable to non-experts, without removing the technical details. (January 2018) (Learn how and when to remove this template message) The term completeness as applied to knowledge bases refers to two different concepts. Contents 1 Formal logic 2 Data management 3 See also 4 References Formal logic[edit] In formal logic, a knowledge base KB is complete if there is no formula ? such that KB ? ? and KB ? ¬?. Example of knowledge base with incomplete knowledge: KB := { A ? B } Then we have KB ? A and KB ? ¬A. In some cases, a consistent knowledge base can be made complete with the closed world assumption—that is, adding all not-entailed literals as negations to the knowledge base. In the above example though, this would not work because it would make the knowledge base inconsistent: KB' = { A ? B, ¬A, ¬B } In the case where KB := { P(a), Q(a), Q(b) }, KB ? P(b) and KB ? ¬P(b), so, with the closed world assumption, KB' = { P(a), ¬P(b), Q(a), Q(b) }, where KB' ? ¬P(b). Data management[edit] In data management, completeness is metaknowledge that can be asserted for parts of the KB via completeness assertions.[1] [2] As example, a knowledge base may contain complete information for predicates R and S, while nothing is asserted for predicate T. Then consider the following queries:  Q1 :- R(x), S(x) Q2 :- R(x), T(x) For Query 1, the knowledge base would return a complete answer, as only predicates that are themselves complete are intersected. For Query 2, no such conclusion could be made, as predicate T is potentially incomplete. See also[edit] Vivid knowledge References[edit] ^ Motro, 1989 (1989). "Integrity = Validity + Completeness". Cite journal requires |journal= (help) ^ Levy, Alon (1996). "Obtaining complete answers from incomplete databases". Cite journal requires |journal= (help) v t e Computable knowledge Topics and concepts Alphabet of human thought Authority control Automated reasoning Commonsense knowledge Commonsense reasoning Computability Formal system Inference engine Knowledge base Knowledge-based systems Knowledge engineering Knowledge extraction Knowledge representation Knowledge retrieval Library classification Logic programming Ontology Personal knowledge base Question answering Semantic reasoner Proposals and implementations Zairja Ars Magna (1300) An Essay towards a Real Character, and a Philosophical Language (1688) Calculus ratiocinator and characteristica universalis (1700) Dewey Decimal Classification (1876) Begriffsschrift (1879) Mundaneum (1910) Logical atomism (1918) Tractatus Logico-Philosophicus (1921) Hilbert's program (1920s) Incompleteness theorem (1931) World Brain (1938) Memex (1945) General Problem Solver (1959) Prolog (1972) Cyc (1984) Semantic Web (2001) Evi (2007) Wolfram Alpha (2009) Watson (2011) Siri (2011) Knowledge Graph (2012) Wikidata (2012) Cortana (2014) Viv (2016) In fiction The Engine (Gulliver's Travels, 1726) Joe ("A Logic Named Joe", 1946) The Librarian (Snow Crash, 1992) Dr. Know (A.I. Artificial Intelligence, 2001) Waterhouse (The Baroque Cycle, 2003) See also: Logic machines in fiction and List of fictional computers This logic-related article is a stub. You can help Wikipedia by expanding it. v t e This database-related article is a stub. You can help Wikipedia by expanding it. v t e Retrieved from "https://en.wikipedia.org/w/index.php?title=Completeness_(knowledge_bases)&oldid=820059336" Categories: Knowledge representation Logic stubs Database stubs Hidden categories: CS1 errors: missing periodical Articles lacking in-text citations from January 2018 All articles lacking in-text citations Articles needing expert attention with no reason or talk parameter Articles needing expert attention from January 2018 All articles needing expert attention Logic articles needing expert attention Wikipedia articles that are too technical from January 2018 All articles that are too technical All stub articles Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page Print/export Create a book Download as PDF Printable version Languages Italiano Edit links This page was last edited on 12 January 2018, at 21:17 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Statistics Cookie statement Mobile view
Thomas@Frank.info
