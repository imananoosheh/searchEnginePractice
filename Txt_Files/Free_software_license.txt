Free software license - Wikipedia Free software license From Wikipedia, the free encyclopedia Jump to navigation Jump to search license allowing software modification and redistribution Types of software license and similar licenses. The highlighted columns are free software. Public domain & equivalents Permissive license Copyleft (protective license) Noncommercial license Proprietary license Trade secret Description Grants all rights Grants use rights, including right to relicense (allows proprietization, license compatibility) Grants use rights, forbids proprietization Grants rights for noncommercial use only. May be combined with copyleft. Traditional use of copyright; no rights need be granted No information made public Software PD, CC0 MIT, Apache, MPL GPL, AGPL JRL, AFPL proprietary software, no public license private, internal software Other creative works PD, CC0 CC-BY CC-BY-SA CC-BY-NC Copyright, no public license unpublished The free-software-licensing spectrum and some examples of programs under those licenses according to David A. Wheeler (2007)[1] Copyleft articles on Copyleft licensing Topics Copyleft Open-source license Free-software license Free and open-source software Royalty-free Higher category: Software, Freedom Category:Free and open-source software licenses v t e A free-software license is a notice that grants the recipient of a piece of software extensive rights to modify and redistribute that software. These actions are usually prohibited by copyright law, but the rights-holder (usually the author) of a piece of software can remove these restrictions by accompanying the software with a software license which grants the recipient these rights. Software using such a license is free software (or free and open-source software) as conferred by the copyright holder. Free-software licenses are applied to software in source code and also binary object-code form, as the copyright law recognizes both forms.[2] Contents 1 History 1.1 Pre 1980s 1.2 1980s 1.3 1990s to 2000s 1.4 2010s 2 Definitions 2.1 OSI-approved open-source licenses 2.2 FSF-approved free-software licenses 3 Conditions in free-software licenses 3.1 Copyleft 3.2 Patent retaliation 3.3 Hardware restrictions 3.4 Attribution, disclaimers and notices 4 Practical problems with licenses 4.1 License compatibility 4.2 Purpose of use 5 Definition conflicts 5.1 Permissive versus copyleft opinions 5.2 Debian 5.3 Controversial borderline cases 6 Market share 7 See also 8 Notes 9 References 10 External links History[edit] See also: History of free and open-source software Pre 1980s[edit] In the early times of software, sharing of software and source code was common in certain communities, for instance academic institutions. Before the US Commission on New Technological Uses of Copyrighted Works (CONTU) decided in 1974 that "computer programs, to the extent that they embody an author's original creation, are proper subject matter of copyright",[3][4] software was not considered copyrightable. Therefore, software had no licenses attached and was shared as public-domain software. The CONTU decision plus court decisions such as Apple v. Franklin in 1983 for object code, clarified that the Copyright Act gave computer programs the copyright status of literary works and started the licensing of software. Free-software licenses before the late 1980s were generally informal notices written by the developers themselves. These early licenses were of the "permissive " kind. 1980s[edit] In the mid-1980s, the GNU project produced copyleft free-software licenses for each of its software packages. An early such license (the "GNU Emacs Copying Permission Notice") was used for GNU Emacs in 1985,[5] with subsequent revisions in 1986, 1987 and 1988 taking the name of "GNU Emacs General Public License".[6] Likewise, the similar GCC General Public License was applied to the GNU Compiler Collection, which was initially published in 1987.[7][8] The original BSD license is also one of the first free-software licenses, dating to 1988. In 1989, version 1 of the GNU General Public License (GPL) was published. Version 2 of the GPL, released in 1991, went on to become the most widely used free-software license.[9][10][11] 1990s to 2000s[edit] Starting in the mid-1990s and until the mid-2000s, the open-source movement pushed and focused the free-software idea forward in the wider public and business perception.[12] In the Dot-com bubble time, Netscape Communications' step to release its webbrowser under a FOSS license in 1998,[13][14] inspired many other companies to adapt to the FOSS ecosystem.[15] In this trend companies and new projects (Mozilla, Apache foundation, and Sun, see also this list) wrote their own FOSS licenses, or adapted existing licenses. This License proliferation was later recognized as problem for the Free and open-source ecosystem due to the increased complexity of license compatibility considerations.[16] While the creation of new licenses slowed down later, license proliferation and its impact are considered an ongoing serious challenge for the free and open-source ecosystem. From the free-software licenses, the GNU GPL version 2 has been tested in to court, first in Germany in 2004 and later in the USA. In the German case the judge did not explicitly discuss the validity of the GPL's clauses but accepted that the GPL had to be adhered to: "If the GPL were not agreed upon by the parties, defendant would notwithstanding lack the necessary rights to copy, distribute, and make the software 'netfilter/iptables' publicly available." Because the defendant did not comply with the GPL, it had to cease use of the software.[17] The US case (MySQL vs Progress) was settled before a verdict was arrived at, but at an initial hearing, Judge Saris "saw no reason" that the GPL would not be enforceable.[18] Around 2004 lawyer Lawrence Rosen argued in the essay Why the public domain isn't a license software could not truly be waived into public domain and can't be interpreted as very permissive FOSS license,[19] a position which faced opposition by Daniel J. Bernstein and others.[20] In 2012 the dispute was finally resolved when Rosen accepted the CC0 as open source license, while admitting that contrary to his previous claims copyright can be waived away, backed by Ninth circuit decisions.[21] In 2007, after years of draft discussion, the GPLv3 as major update of the GPLv2 was released. The release was controversial[22] due to the significant extended scope of the license, which made it incompatible with the GPLv2.[23] Several major FOSS projects (Linux kernel,[24][25] MySQL,[26] BusyBox,[27][28] Blender,[29] VLC media player[30]) decided against adopting the GPLv3. On the other hand, in 2009, two years after the release of the GPLv3, Google open-source programs office manager Chris DiBona reported that the number of open-source projects licensed software that had moved to GPLv3 from GPLv2 was 50%, counting the projects hosted at Google Code.[31] 2010s[edit] In 2011, four years after the release of the GPLv3, 6.5% of all open-source licensed projects are GPLv3 while 42.5% are still GPLv2 according to Black Duck Software data.[25][32] Following in 2011 451 Group analyst Matthew Aslett argued in a blog post that copyleft licenses went into decline and permissive licenses increased, based on statistics from Black Duck Software.[33][34] In 2015 according to Black Duck Software[35] and GitHub statistics,[36] the permissive MIT license dethroned the GPLv2 as most popular free-software license to the second place while the permissive Apache license follows already at third place. In June 2016 an analysis of Fedora Project's packages revealed as most used licenses the GPL, MIT, BSD, and the LGPL.[37] Definitions[edit] OSI-approved open-source licenses[edit] Main article: Open-source license The group Open Source Initiative (OSI) defines and maintains a list of approved open-source licenses. OSI agrees with FSF on all widely used free-software licenses, but differ from FSF's list, as it approves against the Open Source Definition rather than the Free Software Definition. It considers Free Software Permissive license group to be a reference implementation of a Free Software license.[citation needed][clarification needed] Thus its requirements for approving licenses are different. FSF-approved free-software licenses[edit] The Free Software Foundation, the group that maintains the Free Software Definition, maintains a non-exhaustive list of free-software licences.[38] The Free Software Foundation prefers copyleft (share-alike) free-software licensing rather than permissive free-software licensing for most purposes. Its list distinguishes between free-software licenses that are compatible or incompatible with the FSF's copyleft GNU General Public License. Conditions in free-software licenses[edit] There exists an ongoing debate within the free-software community regarding the fine line between what restrictions can be applied and still be called "free".[citation needed] Only "public-domain software" and software under a public-domain-like license is restriction-free.[citation needed] Examples of public-domain-like licenses are, for instance, the WTFPL and the CC0 license. Permissive licenses might carry small obligations like attribution of the author but allow practically all code use cases. Certain licenses, namely the copyleft licenses, include intentionally stronger restrictions (especially on the distribution/distributor) in order to force derived projects to guarantee specific rights which can't be taken away. Copyleft[edit] Main article: copyleft The free-software share-alike licenses written by Richard Stallman in the mid-1980s pioneered a concept known as "copyleft". Ensuing copyleft provisions stated that when modified versions of free software are distributed, they must be distributed under the same terms as the original software. Hence they are referred to as "share and share alike" or "quid pro quo". This results in the new software being open source as well. Since copyleft ensures that later generations of the software grant the freedom to modify the code, this is "free software". Non-copyleft licenses do not ensure that later generations of the software will remain free. Developers who use GPL code in their product must make the source code available to anyone when they share or sell the object code. In this case, the source code must also contain any changes the developers may have made. If GPL code is used but not shared or sold, the code is not required to be made available and any changes may remain private. This permits developers and organizations to use and modify GPL code for private purposes (that is, when the code or the project is not sold or otherwise shared) without being required to make their changes available to the public. Supporters of GPL claim that by mandating that derivative works remain under the GPL, it fosters the growth of free software and requires equal participation by all users. Opponents of GPL claim[39] that "no license can guarantee future software availability" and that the disadvantages of GPL outweigh[40] its advantages. Some also argue that restricting distribution makes the license less free. Whereas proponents would argue that not preserving freedom during distribution would make it less free. For example, a non-copyleft license does not grant the author the freedom to see modified versions of his or her work if it gets publicly published, whereas a copyleft license does grant that freedom. Patent retaliation[edit] Further information: Patent retaliation During the 1990s, free-software licenses began including clauses, such as patent retaliation, in order to protect against software patent litigation cases  a problem which had not previously existed. This new threat was one of the reasons for writing version 3 of the GNU GPL in 2006.[41] In recent years, a term coined tivoization describes a process where hardware restrictions are used to prevent users from running modified versions of the software on that hardware, in which the TiVo device is an example. It is viewed by the FSF as a way to turn free software to effectively non-free, and is why they have chosen to prohibit it in GPLv3.[42] Most newly written free-software licenses since the late 1990s include some form of patent retaliation clauses. These measures stipulate that one's rights under the license (such as to redistribution), may be terminated if one attempts to enforce patents relating to the licensed software, under certain circumstances. As an example, the Apple Public Source License may terminate a user's rights if said user embarks on litigation proceedings against them due to patent litigation. Patent retaliation emerged in response to proliferation and abuse of software patents. Hardware restrictions[edit] Main article: Hardware restrictions Version 3 of the GNU GPL includes specific language prohibiting additional restrictions being enforced by hardware restrictions and digital rights management (DRM), a practice FSF calls tivoization after Tivo used GPLd software on devices that disallowed user modification of that software. Attribution, disclaimers and notices[edit] The majority of free-software licenses require that modified software not claim to be unmodified. Some licenses also require that copyright holders be credited. One such example is version 2 of the GNU GPL, which requires that interactive programs that print warranty or license information, may not have these notices removed from modified versions intended for distribution. Practical problems with licenses[edit] License compatibility[edit] License compatibility between common FOSS software licenses according to David A. Wheeler (2007): the vector arrows denote a one directional compatibility, therefore better compatibility on the left side ("permissive licenses") than on the right side ("copyleft licenses")[43] Main article: License compatibility Licenses of software packages containing contradictory requirements, render it impossible to combine source code from such packages in order to create new software packages.[44] License compatibility between a copyleft license and another license is often only a one-way compatibility.[45] This "one-way compatibility" characteristic is, for instanced, criticized by the Apache Foundation, who provides the more permissive Apache license which doesn't have this characteristic.[46] Non-copyleft licenses, such as the FOSS permissive licenses, have a less complicated license interaction and normally exhibit better license compatibility.[47][48] For example, if one license says "modified versions must mention the developers in any advertising materials", and another license says "modified versions cannot contain additional attribution requirements", then, if someone combined a software package which uses one license with a software package which uses the other, it would be impossible to distribute the combination because these contradictory requirements cannot be fulfilled simultaneously. Thus, these two packages would be license-incompatible. When it comes to copyleft software licenses, they are not inherently compatible with other copyleft licenses, even the GPLv2 is, by itself, not compatible with the GPLv3.[23][49] Purpose of use[edit] Restrictions on use of a software ("use restrictions") are generally unacceptable according to the FSF, OSI, Debian, or the BSD-based distributions. Examples include prohibiting that the software be used for non-private applications, for military purposes, for comparison or benchmarking, for good use,[clarification needed] for ethically questionable means,[50] or in commercial organisations.[51] Definition conflicts[edit] As there are several defining organizations and groups who publish definitions and guidelines about FOSS licenses, notably the FSF, the OSI, the Debian project, and the BSDs, there are sometimes conflicting opinions and interpretations. Permissive versus copyleft opinions[edit] Many users and developers of BSD-based operating systems have a different position on licensing. The main difference is the belief that the copyleft licenses, particularly the GNU General Public License (GPL), are undesirably complicated and/or restrictive.[52] The GPL requires any derivative work to also be released according to the GPL while the BSD license does not. Essentially, the BSD license's only requirement is to acknowledge the original authors, and poses no restrictions on how the source code may be used. As a result, BSD code can be used in proprietary software that only acknowledges the authors. For instance, Microsoft Windows NT 3.1 and macOS have proprietary IP stacks which are derived from BSD-licensed software.[53] In extreme cases, the sub- or re-licensing possibilities with BSD or other permissive licenses might prevent further use in the open-source ecosystem. For instance, MathWorks' FileExchange repository offers the BSD license for user contributions but prevents with additional terms of use any usage beside their own proprietary MATLAB software, for instance with the FOSS GNU Octave software.[54][55][56] On the positive side, as BSD-like permissive licenses have very limited restrictions (typically only attribution), they also have excellent license compatibility, even with copyleft licenses.[47][48] Supporters of the BSD license argue that it is more free than the GPL because it grants the right to do anything with the source code, provided that the attribution is preserved. For example, users might incorporate the BSD-licensed code into proprietary products. The approach has led to BSD code being used in common, widely used proprietary software. In response, proponents of the GPL point out that once code becomes proprietary, users lack the freedoms that define free software.[57] As a result, they consider the BSD license less free than the GPL, and that freedom is more than a lack of restriction. Since the BSD license restricts the right of developers to have changes recontributed to the community,[dubious  discuss] neither it nor the GPL is "free" in the sense of "lacking any restrictions." Code licensed under a permissive free software licence, such as the BSD license, can be incorporated into copylefted (for instance, GPL'd) projects. Such code is thus "GPL-compatible". There is no need to secure the consent of the original authors. In contrast, code under the GPL cannot be relicensed under the BSD license without securing the consent of all copyright holders. Thus the two licenses are compatible, but (unless such consent has been obtained) the combination as a whole must be distributed under the terms of the GPL and not the permissive license. Existing free-software BSD-licensed projects tend to avoid including software licensed under the GPL in the core operating system, or the base system, except as a last resort when alternatives are non-existent or vastly less capable, such as with GCC. For example, starting with FreeBSD 10.0, the GCC was replaced by the Clang/LLVM compiler, perhaps primarily for this reason.[citation needed] The OpenBSD project has acted to remove GPL-licensed tools in favor of BSD-licensed alternatives, some newly written and some adapted from older code.[58] Debian[edit] The Debian project uses the criteria laid out in its Debian Free Software Guidelines (DFSG). The only notable cases where Debian and Free Software Foundation disagree are over the Artistic License and the GNU Free Documentation License (GFDL). Debian accepts the original Artistic License as being a free software license, but FSF disagrees. This has very little impact however since the Artistic License is almost always used in a dual-license setup, along with the GNU General Public License. Controversial borderline cases[edit] The vast majority of free software uses undisputed free-software licenses; however, there have been many debates over whether or not certain other licenses qualify for the definition. Examples of licenses that provoked debate were the 1.x series of the Apple Public Source License, which were accepted by the Open Source Initiative but not by the Free Software Foundation or Debian and the RealNetworks Public Source License, which was accepted by Open Source Initiative and Free Software Foundation but not by Debian. Also, the FSF recommended GNU Free Documentation License,[59] which is incompatible with the GPL,[60] was considered "non-free" by the Debian project around 2006,[61] Nathanael Nerode,[62] and Bruce Perens.[63] The FSF argues that documentation is qualitatively different from software and is subject to different requirements. Debian accepted, in a later resolution, that the GNU FDL complied with the Debian Free Software Guidelines when the controversial "invariant section" is removed, but considers it "still not free of trouble".[64] Notwithstanding, most GNU documentation includes "invariant sections". Similarly, the FLOSS Manuals foundation, an organization devoted to creating manuals for free software, decided to eschew the GFDL in favor of the GPL for its texts in 2007, citing the incompatibility between the two, difficulties in implementing the GFDL, and the fact that the GFDL "does not allow for easy duplication and modification", especially for digital documentation.[65] SLUC is a software license published in Spain in December 2006 to allow all but military use. The writers of the license maintain it is free software, but the Free Software Foundation says it is not free because it infringes the so-called "zero freedom" of the GPL, that is, the freedom to use the software for any purpose.[66] Market share[edit] While historically the most widely used FOSS license has been the GPLv2, in 2015, according to Black Duck Software[35] the permissive MIT license dethroned the GPLv2 to the second place while the permissive Apache license follows at third place. A study from 2012, which used publicly available data, criticized Black Duck Software for not publishing their methodology used in collecting statistics.[67] Daniel German, professor in the Department of Computer Science at the University of Victoria in Canada, presented a talk in 2013 about the methodological challenges in determining which are the most widely used free-software licenses, and showed how he could not replicate the result from Black Duck Software.[68] A GitHub study in 2015 on their statistical data found that the MIT license was the most prominent FOSS license on that platform.[36] In June 2016 an analysis of the Fedora Project's packages showed as most used licenses the GPL family, followed by MIT, BSD, the LGP family, Artistic (for Perl packages), LPPL (for texlive packages), and ASL. The GNU GPLv2+ was the single most popular license[37] See also[edit] Free and open-source software portal Comparison of free and open-source software licenses End-user license agreement License-free software List of free-content licenses Public domain Software license Notes[edit] ^ Wheeler, David A. (2015). "The fight for freedom". Archived from the original on 2017-07-04. Retrieved 2016-02-17. ^ Hancock, Terry (2008-08-29). "What if copyright didn't apply to binary executables?". Free Software Magazine. Archived from the original on 2016-01-25. Retrieved 2016-01-25. ^ Apple Computer, Inc. v. Franklin Computer Corporation Puts the Byte Back into Copyright Protection for Computer Programs in Golden Gate University Law Review Volume 14, Issue 2, Article 3 by Jan L. Nussbaum (January 1984) ^ Lemley, Menell, Merges and Samuelson. Software and Internet Law, p. 34. ^ "GNU Emacs Copying Permission Notice (1985)". Retrieved 2015-11-08. ^ "Free Software - GPL Enforcement". Tech Insider. Retrieved 2015-05-01. ^ "GCC Releases". Retrieved 19 March 2015. ^ "GPLv3 - Transcript of Richard Stallman from the second international GPLv3 conference, Porto Alegre, Brazil; 2006-04-21". Retrieved 19 March 2015. ^ Mark (2008-05-08). "The Curse of Open Source License Proliferation". socializedsoftware.com. Archived from the original on 2015-12-08. Retrieved 2015-11-30. GNU General Public License (GPL) 2.0 58.69% GNU Lesser General Public License (LGPL) 2.1 11.39% Artistic License (Perl) 7.46% BSD License 6.50% Apache License 2.0 2.92% MIT License 2.58% GNU General Public Liense (GPL) 3.0 1.64% Mozilla Public License (MPL) 1.1 1.37% Common Public License 0.83% zlib/lippng License 0.64% ^ David A. Wheeler. "Estimating Linux's Size". ^ "SourceForge.net: Software Map". Dwheeler.com. Retrieved 17 November 2008. License -> OSI: [] GNU General Public License (GPL) (32641 projects), GNU Library or Lesser General Public License (LGPL) (4889 projects of 45727, 82.1%) ^ Kelty, Christpher M. (2008). "The Cultural Significance of free Software - Two Bits" (PDF). Duke University press - durham and london. p. 99. Prior to 1998, Free Software referred either to the Free Software Foundation (and the watchful, micromanaging eye of Stallman) or to one of thousands of different commercial, avocational, or university-research projects, processes, licenses, and ideologies that had a variety of names: sourceware, freeware, shareware, open software, public domain software, and so on. The term Open Source, by contrast, sought to encompass them all in one movement. ^ "Netscape Announces Plans to Make Next-Generation Communicator Source Code Available Free on the Net". Netscape Communications Corporation. January 22, 1998. Archived from the original on April 1, 2007. Retrieved August 8, 2013. Bold move to harness creative power of thousands of internet developers; company makes Netscape Navigator and Communicator 4.0 immediately free for all users, seeding market for enterprise and netcenter businesses ^ "MOUNTAIN VIEW, Calif., April 1 /PRNewswire/ -- Netscape Communications and open source developers are celebrating the first anniversary, March 31, 1999, of the release of Netscape's browser source code to mozilla.org". Netscape Communications. March 31, 1999. Archived from the original on March 26, 2014. Retrieved January 10, 2013. ... the organization that manages open source developers working on the next generation of Netscape's browser and communication software. This event marked a historical milestone for the Internet as Netscape became the first major commercial software company to open its source code, a trend that has since been followed by several other corporations. Since the code was first published on the Internet, thousands of individuals and organizations have downloaded it and made hundreds of contributions to the software. Mozilla.org is now celebrating this one-year anniversary with a party Thursday night in San Francisco. ^ Kelty, Christpher M. (2008). "The Cultural Significance of free Software - Two Bits" (PDF). Duke University press - durham and london. p. 100. The term Open Source, by contrast, sought to encompass them all in one movement. The event that precipitated this attempted semantic coup détat was the release of the source code for Netscapes Communicator Web browser. Its tough to overestimate the importance of Netscape to the fortunes of Free Software. [] But Netscape is far more famous among geeks for giving away something else, in 1998: the source code to Netscape Communicator (née Navigator). ^ "Report of License Proliferation Committee and draft FAQ". Open Source Initiative. 2007-12-12. ^ "Groklaw - The German GPL Order - Translated". Retrieved 19 March 2015. ^ See Progress Software Corporation v. MySQL AB, 195 F. Supp. 2d 328 (D. Mass. 2002), on defendant's motion for preliminary injunction. ^ Lawrence Rosen (2004-05-25). "Why the public domain isn't a license". rosenlaw.com. Retrieved 2016-02-22. ^ Bernstein, Daniel J. (2004). "Placing documents into the public domain". Most rights can be voluntarily abandoned ("waived") by the owner of the rights. Legislators can go to extra effort to create rights that can't be abandoned, but usually they don't do this. In particular, you can voluntarily abandon your United States copyrights: "It is well settled that rights gained under the Copyright Act may be abandoned. But abandonment of a right must be manifested by some overt act indicating an intention to abandon that right. See Hampton v. Paramount Pictures Corp., 279 F.2d 100, 104 (9th Cir. 1960)." ^ Lawrence Rosen (2012-03-08). "(License-review) (License-discuss) CC0 incompliant with OSD on patents, (was: MXM compared to CC0)". opensource.org. Archived from the original on 2016-03-12. Retrieved 2016-02-22. The case you referenced in your email, Hampton v. Paramount Pictures, 279 F.2d 100 (9th Cir. Cal. 1960), stands for the proposition that, at least in the Ninth Circuit, a person can indeed abandon his copyrights (counter to what I wrote in my article) -- but it takes the equivalent of a manifest license to do so. :-) ... For the record, I have already voted +1 to approve the CC0 public domain dedication and fallback license as OSD compliant. I admit that I have argued for years against the "public domain" as an open source license, but in retrospect, considering the minimal risk to developers and users relying on such software and the evident popularity of that "license", I changed my mind. One can't stand in the way of a fire hose of free public domain software, even if it doesn't come with a better FOSS license that I trust more. ^ Mark (2008-05-08). "The Curse of Open Source License Proliferation". socializedsoftware.com. Archived from the original on 2015-12-08. Retrieved 2015-11-30. Currently the decision to move from GPL v2 to GPL v3 is being hotly debated by many open source projects. According to Palamida, a provider of IP compliance software, there have been roughly 2489 open source projects that have moved from GPLv2 to later versions. ^ a b "Frequently Asked Questions about the GNU Licenses  Is GPLv3 compatible with GPLv2?". gnu.org. Retrieved 2014-06-03. No. Some of the requirements in GPLv3, such as the requirement to provide Installation Information, do not exist in GPLv2. As a result, the licenses are not compatible: if you tried to combine code released under both these licenses, you would violate section 6 of GPLv2. However, if code is released under GPL 'version 2 or later,' that is compatible with GPLv3 because GPLv3 is one of the options it permits. ^ Kerner, Sean Michael (2008-01-08). "Torvalds Still Keen On GPLv2". internetnews.com. Retrieved 2015-02-12. In some ways, Linux was the project that really made the split clear between what the FSF is pushing which is very different from what open source and Linux has always been about, which is more of a technical superiority instead of a -- this religious belief in freedom," Torvalds told Zemlin. So, the GPL Version 3 reflects the FSF's goals and the GPL Version 2 pretty closely matches what I think a license should do and so right now, Version 2 is where the kernel is. ^ a b Byfield, Bruce (22 November 2011). "7 Reasons Why Free Software Is Losing Influence: Page 2". Datamation.com. Retrieved 23 August 2013. At the time, the decision seemed sensible in the face of a deadlock. But now, GPLv2 is used for 42.5% of free software, and GPLv3 for less than 6.5%, according to Black Duck Software. ^ "MySQL changes license to avoid GPLv3". Computer business review online. January 4, 2007. Archived from the original on February 6, 2007. Retrieved 2016-11-21. ^ corbet (2006-10-01). "Busy busy busybox". lwn.net. Retrieved 2015-11-21. Since BusyBox can be found in so many embedded systems, it finds itself at the core of the GPLv3 anti-DRM debate. [] The real outcomes, however, are this: BusyBox will be GPLv2 only starting with the next release. It is generally accepted that stripping out the "or any later version" is legally defensible, and that the merging of other GPLv2-only code will force that issue in any case. ^ Landley, Rob (2006-09-09). "Re: Move GPLv2 vs v3 fun..." lwn.net. Retrieved 2015-11-21. Don't invent a straw man argument please. I consider licensing BusyBox under GPLv3 to be useless, unnecessary, overcomplicated, and confusing, and in addition to that it has actual downsides. 1) Useless: We're never dropping GPLv2. ^ Prokoudine, Alexandre (26 January 2012). "What's up with DWG adoption in free software?". libregraphicsworld.org. Archived from the original on 2016-11-09. Retrieved 2015-12-05. Blender is also still 'GPLv2 or later'. For the time being we stick to that, moving to GPL 3 has no evident benefits I know of. ^ Denis-Courmont, Rémi. "VLC media player to remain under GNU GPL version 2". videolan.org. Retrieved 2015-11-21. In 2001, VLC was released under the OSI-approved GNU General Public version 2, with the commonly-offered option to use 'any later version' thereof (though there was not any such later version at the time). Following the release by the Free Software Foundation (FSF) of the new version 3 of its GNU General Public License (GPL) on the 29th of June 2007, contributors to the VLC media player, and other software projects hosted at videolan.org, debated the possibility of updating the licensing terms for future version of the VLC media player and other hosted projects, to version 3 of the GPL. ... There is strong concern that these new additional requirements might not match the industrial and economic reality of our time, especially in the market of consumer electronics. It is our belief that changing our licensing terms to GPL version 3 would currently not be in the best interest of our community as a whole. Consequently, we plan to keep distributing future versions of VLC media player under the terms of the GPL version 2. ^ Asay, Matt (23 July 2009). "GPLv3 hits 50 percent adoption | The Open Road - CNET News". News.cnet.com. Retrieved 2 September 2013. ^ Proffitt, Brian (December 16, 2011). "GPL, copyleft use declining faster than ever". ITworld. ^ Proffitt, Brian (16 December 2011). "GPL, copyleft use declining faster than ever - Data suggests a sharper rate of decline, which raises the question: why?". IT world. Retrieved 23 August 2013. ^ Aslett, Matthew (December 15, 2011). "On the continuing decline of the GPL". Archived from the original on December 9, 2016. Retrieved February 17, 2016. ^ a b "Top 20 licenses". Black Duck Software. 19 November 2015. Archived from the original on 19 July 2016. Retrieved 19 November 2015. 1. MIT license 24%, 2. GNU General Public License (GPL) 2.0 23%, 3. Apache License 16%, 4. GNU General Public License (GPL) 3.0 9%, 5. BSD License 2.0 (3-clause, New or Revised) License 6%, 6. GNU Lesser General Public License (LGPL) 2.1 5%, 7. Artistic License (Perl) 4%, 8. GNU Lesser General Public License (LGPL) 3.0 2%, 9. Microsoft Public License 2%, 10. Eclipse Public License (EPL) 2% ^ a b Balter, Ben (2015-03-09). "Open source license usage on GitHub.com". github.com. Retrieved 2015-11-21. 1 MIT 44.69%, 2 Other 15.68%, 3 GPLv2 12.96%, 4 Apache 11.19%, 5 GPLv3 8.88%, 6 BSD 3-clause 4.53%, 7 Unlicense 1.87%, 8 BSD 2-clause 1.70%, 9 LGPLv3 1.30%, 10 AGPLv3 1.05% ^ a b Anwesha Das (22 June 2016). "Software Licenses in Fedora Ecosystem". anweshadas.in. Retrieved 2016-06-27. From the above chart it is clear that the GPL family is the highest used (I had miscalculated it as MIT before).The other major licenses are MIT, BSD, the LGPL family, Artistic (for Perl packages), LPPL (foe texlive packages), ASL. ^ "Various Licenses and Comments about Them - GNU Project - Free Software Foundation". Retrieved 19 March 2015. ^ "Why you should use a BSD style license for your Open Source Project". Retrieved 19 March 2015. ^ "Why you should use a BSD style license for your Open Source Project". Retrieved 19 March 2015. ^ "GPLv3 - Transcript of Richard Stallman from the fifth international GPLv3 conference, Tokyo, Japan; 2006-11-21". Retrieved 19 March 2015. ^ "Richard Stallman discusses changes in GPLv3". a new method of trying to deprive the users of freedom. In broad terms we refer to this as tivoisation. ^ Wheeler, David A. (September 27, 2007). "The Free-Libre / Open Source Software (FLOSS) License Slide". ^ "How GPLv3 tackles license proliferation". Archived from the original on 2013-05-02. ^ LAURENT, Philippe (2008-09-24). "The GPLv3 and compatibility issues" (PDF). European Open source Lawyers Event 2008. University of Namur  Belgium. p. 7. Archived from the original (pdf) on 2016-03-04. Retrieved 2015-05-30. Copyleft is the main source of compatibility problems. ^ Apache foundation (2015-05-30). "GPL compatibility". Retrieved 2015-05-30. Apache 2 software can therefore be included in GPLv3 projects, because the GPLv3 license accepts our software into GPLv3 works. However, GPLv3 software cannot be included in Apache projects. The licenses are incompatible in one direction only, and it is a result of ASF's licensing philosophy and the GPLv3 authors' interpretation of copyright law. ^ a b Hanwell, Marcus D. (28 Jan 2014). "Should I use a permissive license? Copyleft? Or something in the middle?". opensource.com. Retrieved 2015-05-30. Permissive licensing simplifies things One reason the business world, and more and more developers [], favor permissive licenses is in the simplicity of reuse. The license usually only pertains to the source code that is licensed and makes no attempt to infer any conditions upon any other component, and because of this there is no need to define what constitutes a derived work. I have also never seen a license compatibility chart for permissive licenses; it seems that they are all compatible. ^ a b "Licence Compatibility and Interoperability". Open-Source Software - Develop, share, and reuse open source software for public administrations. joinup.ec.europa.eu. Archived from the original on 2015-06-17. Retrieved 2015-05-30. The licences for distributing free or open source software (FOSS) are divided in two families: permissive and copyleft. Permissive licences (BSD, MIT, X11, Apache, Zope) are generally compatible and interoperable with most other licences, tolerating to merge, combine or improve the covered code and to re-distribute it under many licences (including non-free or 'proprietary'). ^ Landley, Rob. "CELF 2013 Toybox talk". landley.net. Retrieved 2013-08-21. GPLv3 broke "the" GPL into incompatible forks that can't share code. ^ "The HESSLA's Problems - GNU Project - Free Software Foundation". Retrieved 19 March 2015. ^ "GPLv3 - Transcript of Richard Stallman from the third international GPLv3 conference, Barcelona; 2006-06-22". Retrieved 19 March 2015. ^ "OpenBSD Copyright Policy". the restriction that source code must be distributed or made available for all works that are derivatives [] As a consequence, software bound by the GPL terms cannot be included in the kernel or "runtime" of OpenBSD ^ "FreeBSD der unbekannte Riese" (in German). ^ "terms of use". Content that you submit must not directly compete with products offered by MathWorks. Content submitted to File Exchange may only be used with MathWorks products. ^ "File Exchange Licensing Transition FAQ". ^ "Why can't I use code from File Exchange in Octave? It's released under a BSD license!". ^ "Freedom or Power? by Bradley Kuhn and Richard Stallman". ^ "Goals". ^ "Frequently Asked Questions about the GNU Licenses: Why don't you use the GPL for manuals?". Retrieved 20 June 2009. ^ Braakman, Richard. "Re: Proposed statement wrt GNU FDL". Debian-legal (Mailing list). ^ Srivastava, Manoj (2006). "Draft Debian Position Statement about the GNU Free Documentation License (nerGFDL)". Retrieved 2007-09-25. It is not possible to borrow text from a GFDL'd manual and incorporate it in any free software program whatsoever. This is not a mere license incompatibility. It's not just that the GFDL is incompatible with this or that free software license: it's that it is fundamentally incompatible with any free software license whatsoever. So if you write a new program, and you have no commitments at all about what license you want to use, saving only that it be a free license, you cannot include GFDL'd text. The GNU FDL, as it stands today, does not meet the Debian Free Software Guidelines. There are significant problems with the license, as detailed above; and, as such, we cannot accept works licensed under the GNU FDL into our distribution. ^ Nerode, Nathanael (2003-09-24). "Why You Shouldn't Use the GNU FDL". Archived from the original on 2003-10-09. Retrieved 2011-11-07. ^ Bruce Perens (2 Sep 2003). "stepping in between Debian and FSF". lists.debian.org/debian-legal. Retrieved 2016-03-20. FSF, a Free Software organization, isn't being entirely true to the Free Software ethos while it is promoting a license that allows invariant sections to be applied to anything but the license text and attribution. FSF is not Creative Commons:the documentation that FSF handles is an essential component of FSF's Free Software, and should be treated as such. In that light, the GFDL isn't consistent with the ethos that FSF has promoted for 19 years. ^ "Resolution: Why the GNU Free Documentation License is not suitable for Debian". Debian Project. FebruaryMarch 2006. Retrieved June 20, 2009. ^ FLOSS Manuals Foundation (6 June 2007). "License Change". FLOSS Manuals Blog. FLOSS Manuals Foundation. Archived from the original on 28 February 2008. Retrieved 20 June 2009. ^ "Transcript of Richard Stallman at the 3nd international GPLv3 conference". Free Software Foundation Europe. 22 June 2006. Retrieved 23 July 2017. ^ Sam Varghese (7 February 2012). "GPL use in Debian on the rise: study". Itwire.com. Retrieved 2 September 2013. ^ "Surveying open source licenses". Lwn.net. Retrieved 2 September 2013. References[edit] Rosen, Lawrence (2004-07-22). Open Source Licensing: Software Freedom and Intellectual Property Law. Prentice Hall. ISBN 978-0-13-148787-1. External links[edit] This article's use of external links may not follow Wikipedia's policies or guidelines. Please improve this article by removing excessive or inappropriate external links, and converting useful links where appropriate into footnote references. (August 2014) (Learn how and when to remove this template message) Wikibooks has a book on the topic of: FOSS Licensing The Free Software Definition, by the Free Software Foundation. The Free Software Foundation's list of free and non-free licenses Debian's license information page Open Source Initiative's list of licenses OpenBSD's "goals" page describes its view of free software Transcripts of license strategy discussions, mostly of Stallman and Moglen, during the drafting of GPLv3 Understanding Open Source and Free Software Licensing, by Andrew M. St. Laurent Report on free software business models and licensing (58 pages) A comparison of free open source software licenses[permanent dead link], by Jeremy Hollander A 45-page licensing primer by Software Freedom Law Center Open Source Best Practices v t e Free and open-source software General Alternative terms for free software Comparison of open-source and closed-source software Comparison of source-code-hosting facilities Free software Free software project directories Gratis versus libre Long-term support Open-source software Open-source software development Outline Software packages Audio Bioinformatics Codecs Collaboration Configuration management Device drivers Graphics Wireless Geophysics Health Mathematics Operating systems Programming languages Routing Statistics Television Video games Web applications Content management systems E-commerce Word processors Android apps iOS apps Commercial Trademarked Formerly proprietary Formerly open-source Community Free software movement History Open-source-software movement Organizations Events Licenses AFL Apache APSL Artistic Beerware Boost BSD CC0 CDDL EPL Free Software Foundation GNU GPL GNU LGPL ISC MIT MPL Ms-PL/RL Python Python Software Foundation License Sleepycat Unlicense WTFPL zlib Types and standards Comparison of free and open-source software licenses Contributor License Agreement Copyleft Debian Free Software Guidelines Definition of Free Cultural Works Free license The Free Software Definition The Open Source Definition Open-source license Permissive software license Public domain Viral license Challenges Digital rights management Firmware security Hardware restrictions License proliferation Mozilla software rebranding Proprietary device drivers Proprietary firmware Proprietary software SCO/Linux controversies Secure boot Software patents Software security Trusted Computing Related topics Forking GNU Manifesto Microsoft Open Specification Promise Open-core model Open-source hardware Shared Source Initiative Source-available software The Cathedral and the Bazaar Revolution OS Free and open-source software portal Category Book v t e Intellectual property activism Issues Artificial scarcity Copyright infringement Copyright troll Digital rights management Gripe site Legal aspects of file sharing Mashup digital music videos Monopolies of knowledge Music piracy Orphan works Patents biological software software patent debate trolling Public domain Concepts All rights reversed Alternative compensation system Anti-copyright notice Business models for open-source software Copyleft Commercial use of copyleft works Commons-based peer production Electronic sell-through Free content Free software license Libertarian positions Open content Open-design movement Open Music Model Open patent Open-source Open-source hardware Open-source software Prize system contests Share-alike Video on demand Movements Access to Knowledge movement Anti-copyright Cultural environmentalism Free-culture movement Free software movement Organizations Pro-copyright Copyright Alliance Pro-copyleft Creative Commons Electronic Frontier Foundation Free Software Foundation Open Rights Group Organization for Transformative Works The Pirate Bay Piratbyrån Pirate Party Public Knowledge Sci-Hub Students for Free Culture People Cory Doctorow Alexandra Elbakyan Rick Falkvinge Lawrence Lessig Richard Stallman Peter Suber Peter Sunde Aaron Swartz Documentaries Steal This Film (2006, 2007) Good Copy Bad Copy (2007) RiP!: A Remix Manifesto (2008) TPB AFK: The Pirate Bay Away From Keyboard (2013) The Internet's Own Boy (2014) v t e Software distribution Licenses Beerware Floating licensing Free and open-source Free Open source Freely redistributable Proprietary Public domain Source-available Compensation models Adware Commercial software Retail software Crippleware Crowdfunding Freemium Freeware Pay what you want Careware Donationware Open-core model Postcardware Shareware Nagware Delivery methods Digital distribution File sharing On-premises Pre-installed Product bundling Retail software Sneakernet Software as a service Deceptive and/or illicit Unwanted software bundling Malware Spyware Trojan horse Worm Ransomware Scareware Shovelware Vaporware list Software release life cycle Abandonware End-of-life Long-term support Software maintenance Software maintainer Software publisher Copy protection Digital rights management Software protection dongle Hardware restrictions License manager Product activation Product key Software copyright Software patent Torrent poisoning Retrieved from "https://en.wikipedia.org/w/index.php?title=Free_software_license&oldid=945494750" Categories: Free and open-source software licenses Terms of service Hidden categories: CS1 German-language sources (de) Articles with short description All articles with unsourced statements Articles with unsourced statements from November 2015 Wikipedia articles needing clarification from November 2015 Articles with unsourced statements from November 2016 Wikipedia articles needing clarification from December 2016 All accuracy disputes Articles with disputed statements from November 2015 Articles with unsourced statements from May 2016 Wikipedia external links cleanup from August 2014 Wikipedia spam cleanup from August 2014 All articles with dead external links Articles with dead external links from December 2019 Articles with permanently dead external links Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page In other projects Wikimedia Commons Print/export Create a book Download as PDF Printable version Languages ??????? ????? ?etina Español ????? ??? ??????? Bahasa Indonesia Italiano ???????? Bahasa Melayu ??? Norsk bokmål Polski Português ??????? ?????? / srpski Ti?ng Vi?t Edit links This page was last edited on 14 March 2020, at 10:16 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Statistics Cookie statement Mobile view
